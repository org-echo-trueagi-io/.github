name: Clone Repos to Current Org PAT

on:
  workflow_dispatch:

jobs:
  clone_repos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI and Git
        run: |
          sudo apt-get update
          sudo apt-get install gh git -y

      - name: Set Variables
        id: vars
        run: |
          CURRENT_ORG="${{ github.repository_owner }}"
          SOURCE_ORG="${CURRENT_ORG#org-echo-}"

          echo "SOURCE_ORG=$SOURCE_ORG" >> $GITHUB_ENV
          echo "TARGET_ORG=$CURRENT_ORG" >> $GITHUB_ENV

      - name: Clone and mirror repositories to inferred target org
        run: |
          mkdir -p cloned-repos
          cd cloned-repos

          gh auth login --with-token < <(echo ${{ secrets.ORG_PAT }})

          gh repo list $SOURCE_ORG --json name -q '.[].name' | while read repo; do
            echo "Cloning $repo from $SOURCE_ORG"
            git clone "https://github.com/$SOURCE_ORG/$repo.git" "$repo"
            cd $repo

            # Check if the repository exists in the target organization
            if ! gh repo view "$TARGET_ORG/$repo" > /dev/null 2>&1; then
              echo "Repository $repo does not exist in $TARGET_ORG. Creating..."
              gh repo create "$TARGET_ORG/$repo" --private --confirm
            else
              echo "Repository $repo already exists in $TARGET_ORG."
            fi

            git remote set-url origin "https://github.com/$TARGET_ORG/$repo.git"
            echo "Pushing $repo to $TARGET_ORG"

            git config http.extraheader "AUTHORIZATION: Basic $(echo -n x-access-token:${{ secrets.ORG_PAT }} | base64 --wrap=0)"
            git push --mirror
            cd ..
            rm -rf $repo
          done
        env:
          ORG_PAT: ${{ secrets.ORG_PAT }}
