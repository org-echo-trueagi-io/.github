name: Clone Repos to Current Org OA

on:
  workflow_dispatch:

jobs:
  auth_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI and Git
        run: |
          sudo apt-get update
          sudo apt-get install gh git -y

      - name: Authenticate with GitHub CLI
        run: echo "${{ secrets.ORG_ACT }}" | gh auth login --with-token

      - name: Test Authentication
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global credential.helper "store --file=$HOME/.git-credentials"
          echo "https://${{ secrets.ORG_ACT }}@github.com" > $HOME/.git-credentials

          # Test the authentication by listing repositories in the current organization
          echo "Testing authentication by listing repositories in the target organization..."
          if ! gh repo list "${{ github.repository_owner }}" --limit 1; then
            echo "Authentication failed. Exiting..."
            exit 1
          else
            echo "Authentication succeeded. Continuing..."
          fi

  clone_repos:
    runs-on: ubuntu-latest
    needs: auth_check
    steps:
      - name: Set Variables
        id: vars
        run: |
          CURRENT_ORG="${{ github.repository_owner }}"
          SOURCE_ORG="${CURRENT_ORG#org-echo-}"

          echo "SOURCE_ORG=$SOURCE_ORG" >> $GITHUB_ENV
          echo "TARGET_ORG=$CURRENT_ORG" >> $GITHUB_ENV

      - name: Clone and mirror repositories to inferred target org
        run: |
          mkdir -p cloned-repos
          cd cloned-repos

          gh repo list $SOURCE_ORG --json name -q '.[].name' | while read repo; do
            echo "Cloning $repo from $SOURCE_ORG"
            git clone "https://github.com/$SOURCE_ORG/$repo.git" "$repo"
            cd $repo

            git remote set-url origin "https://github.com/$TARGET_ORG/$repo.git"
            echo "Pushing $repo to $TARGET_ORG"
            
            git config http.extraheader "AUTHORIZATION: Basic $(echo -n x-access-token:${{ secrets.ORG_ACT }} | base64 --wrap=0)"
            git push --mirror
            cd ..
            rm -rf $repo
          done
        env:
          ORG_ACT: ${{ secrets.ORG_ACT }}
